---
title: "midterm_project_jparks"
output:
  html_document:
    toc: yes
    toc_float: yes
    theme: united
editor: visual
---

## Category S02

```{r setup, include=FALSE}
# chunks
knitr::opts_chunk$set(echo=TRUE, eval=TRUE, include=TRUE, message=FALSE, 
warning=FALSE, fig.show="hold", fig.height=4)

# libraries
library(tidyverse)
library(fpp2)
library(readxl)
library(zoo)
library(seasonal)
library(kableExtra)

# ggplot
theme_set(theme_light())
```

```{r}
expand_dates <- function(my_data){
  
  # create full date sequence
  date_seq <- seq(min(my_data$dates), max(my_data$dates), by = "day")

  # convert original data frame to a zoo object
  zoo_obj <- zooreg(my_data$values, order.by = my_data$dates, frequency=365)

  # merge with a zoo object containing consecutive dates
  merged_obj <- merge(zoo_obj, zooreg(, order.by = date_seq, frequency=365))

  # replace NA with 0
  merged_obj_na <- merged_obj %>% replace(is.na(.), 0)

  # convert to a ts object
  my_ts <- ts(coredata(merged_obj_na)[,1], 
              start = c(year(min(my_data$dates)),
                        yday(min(my_data$dates))), frequency=365) 
  
  return(my_ts)
}
```

```{r include=FALSE}
nice_table <- function(df, cap=NULL, cols=NULL, dig=3, fw=F){
  if (is.null(cols)) {c <- colnames(df)} else {c <- cols}
  table <- df %>% 
    kable(caption=cap, col.names=c, digits=dig) %>% 
    kable_styling(
      bootstrap_options = c("striped", "hover", "condensed"),
      html_font = 'monospace',
      full_width = fw)
  return(table)
}
```

```{r}
# load data
df <- read_xls('data/Data Set for Class.xls', sheet='Set for Class') %>%
  mutate(Date = as.Date(SeriesInd-2, origin = '1900-01-01'))
```

```{r}
df_s02 <- df %>%
  filter(category == 'S02') %>%
  mutate(Date_index = row_number()) %>%
  select(c(Date_index,Date,Var02,Var03)) %>%
  head(1622)
```

```{r}
data_s02_v02 <- df_s02 %>%
  select(dates=Date,values=Var02) %>%
  drop_na() 

data_s02_v03 <- df_s02 %>%
  select(dates=Date,values=Var03) %>%
  drop_na() 
```

### Variable 02

```{r}
## expand to include missing dates, impute 0 for NA
ts_s02_v02 <- expand_dates(data_s02_v02)
```

```{r}
# check stats
start(ts_s02_v02)
end(ts_s02_v02)
frequency(ts_s02_v02)
```

```{r}
# simple graphs
autoplot(ts_s02_v02)
```

```{r}
# 7-MA moving averages
ts_s02_v02_ma7 <- ma(ts_s02_v02, order=7, centre=TRUE)
autoplot(ts_s02_v02_ma7)
```

```{r}
#! layout-ncol: 2

# seasonality
ggAcf(ts_s02_v02_ma7, lag=30)
ggseasonplot(ts_s02_v02_ma7)
ggsubseriesplot(ts_s02_v02_ma7)
gglagplot(ts_s02_v02_ma7)
```

#### Classical Decomposition

```{r}
# classical decomp
decompose(ts_s02_v02_ma7) %>%
  autoplot()
```

### STL Decomposition

```{r}
# stl decomp
mstl(ts_s02_v02_ma7) %>%
  autoplot()
```

#### Forecast

```{r}
# ets forecast with 7-MA moving average
f_s02_v02_ma7 <- forecast(ts_s02_v02_ma7, h=140) 

f_s02_v02_ma7 %>%
  autoplot()
```

#### Diagnostics

```{r}
accuracy(f_s02_v02_ma7)
```

```{r}
# forecast_s02_v02 <- forecast(ts_s02_v02_ma7, h=140)
# forecast_s02_v02$mean %>% nice_table()
```

### Variable 03

```{r}
## expand to include missing dates, impute 0 for NA
ts_s02_v03 <- expand_dates(data_s02_v03)
```

```{r}
# check stats
start(ts_s02_v03)
end(ts_s02_v03)
frequency(ts_s02_v03)
```

```{r}
# simple graphs
autoplot(ts_s02_v03)
```

```{r}
# 7-MA moving averages
ts_s02_v03_ma7 <- ma(ts_s02_v03, order=7, centre=TRUE)
autoplot(ts_s02_v03_ma7)
```

```{r}
# seasonality
ggAcf(ts_s02_v03_ma7, lag=30)
ggseasonplot(ts_s02_v03_ma7)
ggsubseriesplot(ts_s02_v03_ma7)
gglagplot(ts_s02_v03_ma7)
```

#### Classical Decomposition

```{r}
# classical decomp
decompose(ts_s02_v03_ma7) %>%
  autoplot()
```

### STL Decomposition

```{r}
# stl decomp
mstl(ts_s02_v03_ma7) %>%
  autoplot()
```

```{r}
# exponential smoothing

```

#### Forecast Var03

```{r}
# ets forecast with 7-MA moving average
f_s02_v03_ma7 <- forecast(ts_s02_v03_ma7, h=140) 

f_s02_v03_ma7 %>%
  autoplot()
```

#### Diagnostics

```{r}
accuracy(f_s02_v03_ma7)
```
